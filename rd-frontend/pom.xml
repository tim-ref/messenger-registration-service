<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2023 akquinet GmbH
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.akquinet.timref.fachdienst.registrierungsdienst</groupId>
        <artifactId>rd-parent</artifactId>
        <version>0.1.6</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>rd-frontend</artifactId>
    <version>0.1.6</version>
    <name>Registrierungsdienst - Frontend</name>
    <description>Frontend f√ºr den Registrierungsdienst der TIM-Referenzimplementierung</description>

    <properties>
        <node.version>v18.17.1</node.version>
        <npm.version>10.2.1</npm.version>

        <sonar.projectName>Frontend</sonar.projectName>
        <sonar.sources>src</sonar.sources>
        <sonar.exclusions>**/*.spec.ts,**/assets</sonar.exclusions>
        <sonar.tests>src/app</sonar.tests>
        <sonar.test.inclusions>**/*.spec.ts</sonar.test.inclusions>
        <sonar.typescript.lcov.reportPaths>coverage/frontend/lcov.info</sonar.typescript.lcov.reportPaths>

        <package.classifier>docker</package.classifier>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>dist</directory>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.13.4</version>
                </plugin>
            </plugins>
        </pluginManagement>


        <plugins>
            <!-- maven-clean-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                        </fileset>
                        <fileset>
                            <directory>reports</directory>
                        </fileset>
                        <fileset>
                            <directory>coverage</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>de.ingogriebsch.maven</groupId>
                <artifactId>sync-packagejson-version-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <id>sync-with-pom-version</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>sync</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- frontend-maven-plugin -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>npm - install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                            <installDirectory>./</installDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm - install dependencies</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm - ng build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build:${frontend.env}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm - ng test</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <arguments>run test:headless</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm - vulnerability check</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>none</phase>
                        <configuration>
                            <arguments>audit</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-frontend</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assemble</id>
                        <phase />
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>license</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
            <build>
                <plugins>
                    <!-- exec-maven-plugin -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>npm - install nlf</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/node/npm</executable>
                                    <arguments>
                                        <argument>i</argument>
                                        <argument>-g</argument>
                                        <argument>nlf</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm - create license report</id>
                                <phase>site</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bin/nlf</executable>
                                    <outputFile>${project.build.directory}/site/third-party-report-npm.txt</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>